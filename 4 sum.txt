class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        int n=nums.size();
        vector<vector<int>>res;
        sort(nums.begin(),nums.end());
        if(n==0){
            return res;
        }
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                int target2=target-nums[i]-nums[j];
                int f=j+1;
                int b=n-1;
                while(f<b){
                if(nums[f]+nums[b]<target2)
                    f++;
                else if(nums[f]+nums[b]>target2)
                    b--;
                else{
                    vector<int>quad(4,0);
                    quad[0]=nums[i];
                    quad[1]=nums[j];
                    quad[2]=nums[f];
                    quad[3]=nums[b];
                    res.push_back(quad);
                    while(f<b && nums[f]==nums[f+1])f++;
                    while(f<b && nums[b]==nums[b-1])b--;
                    f++;
                    b--;
                    
                }
                }
                while(j+1<n && nums[j+1]==nums[j])j++;
                
                    
            }
            while(i+1<n && nums[i+1]==nums[i])i++;
        }
        return res;
    }
};